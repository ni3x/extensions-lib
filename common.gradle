apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlinx-serialization'

ext {
    extClass = '.AnimeExtensionFactory'
    extVersionCode = 1
    isNsfw = false
}

if (project.hasProperty("nsfw")) {
    ext.isNsfw = project.getProperty("nsfw").toBoolean()
}

android {
    compileSdk AndroidConfig.COMPILE_SDK

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }

    defaultConfig {
        applicationIdSuffix project.parent.name + "." + project.name
        versionCode extVersionCode
        versionName "16.$versionCode"
        base {
            archivesName = "aniyomi-$applicationIdSuffix-v$versionName"
        }
        minSdk AndroidConfig.MIN_SDK
        targetSdk AndroidConfig.TARGET_SDK
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        manifestPlaceholders = [
                NSFW_VALUE: isNsfw,
                EXTENSION_CLASS: extClass,
                EXTENSION_FACTORY: project.name + extClass,
                REQUIRE_UNMETERED: project.findProperty("requireUnmetered") ?: false,
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    namespace = "eu.kanade.tachiyomi.animeextension"

    dependenciesInfo {
        includeInApk = false
    }
}

repositories {
    mavenCentral()
    google()
    maven { url "https://www.jitpack.io" }
}

dependencies {
    implementation project(':core')
    compileOnly libs.bundles.common

    testImplementation libs.bundles.test
}

preBuild.dependsOn(lintKotlin)
lintKotlin.dependsOn(formatKotlin)